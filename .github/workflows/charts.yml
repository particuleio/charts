name: 'charts'

on:
  push:
    branches:
    - main
  pull_request:

jobs:
  charts:
    name: 'charts'
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v2
      with:
        submodules: 'true'
        fetch-depth: 0

    - name: 'charts:git'
      run: |
        git config user.name "$GITHUB_ACTOR"
        git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

    - name: 'charts:asdf:install'
      uses: asdf-vm/actions/install@v1.1.0

    - name: 'charts:particule'
      run: helm lint charts/*

    - name: 'charts:aws-ebs-csi-driver'
      run: helm lint aws-ebs-csi-driver/charts/*

    - name: 'charts:istio'
      run: |-
        helm lint istio/manifests/charts/istio-cni
        helm lint istio/manifests/charts/istio-operator

    - name: 'charts:releaser'
      uses: helm/chart-releaser-action@v1.1.0
      env:
        CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      if: github.ref == 'refs/heads/main'

    - name: 'charts:releaser:aws-ebs-csi-driver'
      uses: helm/chart-releaser-action@v1.1.0
      env:
        CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      with:
        charts_dir: aws-ebs-csi-driver/charts
      if: github.ref == 'refs/heads/main'

    - name: 'charts:releaser:istio-cni'
      uses: helm/chart-releaser-action@v1.1.0
      env:
        CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      with:
        charts_dir: istio/manifests/charts/istio-cni
      if: github.ref == 'refs/heads/main'

    - name: 'charts:releaser:istio-operator'
      uses: helm/chart-releaser-action@v1.1.0
      env:
        CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      with:
        charts_dir: istio/manifests/charts/istio-operator
      if: github.ref == 'refs/heads/main'

    - name: 'charts:success'
      if: success()
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      uses: voxmedia/github-action-slack-notify-build@v1
      with:
        channel: ${{ secrets.SLACK_CHANNEL }}
        status: SUCCESS
        color: good

    - name: 'charts:failure'
      if: failure()
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      uses: voxmedia/github-action-slack-notify-build@v1
      with:
        channel: ${{ secrets.SLACK_CHANNEL }}
        status: failure
        color: danger
