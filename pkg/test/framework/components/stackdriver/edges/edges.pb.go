// Code generated by protoc-gen-go. DO NOT EDIT.
// source: extensions/stackdriver/edges/edges.proto

package google_cloud_meshtelemetry_v1alpha1

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TrafficAssertion_Protocol int32

const (
	TrafficAssertion_PROTOCOL_UNSPECIFIED TrafficAssertion_Protocol = 0
	TrafficAssertion_PROTOCOL_HTTP        TrafficAssertion_Protocol = 1
	TrafficAssertion_PROTOCOL_HTTPS       TrafficAssertion_Protocol = 2
	TrafficAssertion_PROTOCOL_TCP         TrafficAssertion_Protocol = 3
	TrafficAssertion_PROTOCOL_GRPC        TrafficAssertion_Protocol = 4
)

var TrafficAssertion_Protocol_name = map[int32]string{
	0: "PROTOCOL_UNSPECIFIED",
	1: "PROTOCOL_HTTP",
	2: "PROTOCOL_HTTPS",
	3: "PROTOCOL_TCP",
	4: "PROTOCOL_GRPC",
}

var TrafficAssertion_Protocol_value = map[string]int32{
	"PROTOCOL_UNSPECIFIED": 0,
	"PROTOCOL_HTTP":        1,
	"PROTOCOL_HTTPS":       2,
	"PROTOCOL_TCP":         3,
	"PROTOCOL_GRPC":        4,
}

func (x TrafficAssertion_Protocol) String() string {
	return proto.EnumName(TrafficAssertion_Protocol_name, int32(x))
}

func (TrafficAssertion_Protocol) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0b9d48fc1143c9cf, []int{3, 0}
}

type ReportTrafficAssertionsRequest struct {
	Parent               string               `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	MeshUid              string               `protobuf:"bytes,2,opt,name=mesh_uid,json=meshUid,proto3" json:"mesh_uid,omitempty"`
	TrafficAssertions    []*TrafficAssertion  `protobuf:"bytes,3,rep,name=traffic_assertions,json=trafficAssertions,proto3" json:"traffic_assertions,omitempty"`
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ReportTrafficAssertionsRequest) Reset()         { *m = ReportTrafficAssertionsRequest{} }
func (m *ReportTrafficAssertionsRequest) String() string { return proto.CompactTextString(m) }
func (*ReportTrafficAssertionsRequest) ProtoMessage()    {}
func (*ReportTrafficAssertionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b9d48fc1143c9cf, []int{0}
}

func (m *ReportTrafficAssertionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReportTrafficAssertionsRequest.Unmarshal(m, b)
}
func (m *ReportTrafficAssertionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReportTrafficAssertionsRequest.Marshal(b, m, deterministic)
}
func (m *ReportTrafficAssertionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReportTrafficAssertionsRequest.Merge(m, src)
}
func (m *ReportTrafficAssertionsRequest) XXX_Size() int {
	return xxx_messageInfo_ReportTrafficAssertionsRequest.Size(m)
}
func (m *ReportTrafficAssertionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReportTrafficAssertionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReportTrafficAssertionsRequest proto.InternalMessageInfo

func (m *ReportTrafficAssertionsRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *ReportTrafficAssertionsRequest) GetMeshUid() string {
	if m != nil {
		return m.MeshUid
	}
	return ""
}

func (m *ReportTrafficAssertionsRequest) GetTrafficAssertions() []*TrafficAssertion {
	if m != nil {
		return m.TrafficAssertions
	}
	return nil
}

func (m *ReportTrafficAssertionsRequest) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

type ReportTrafficAssertionsResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReportTrafficAssertionsResponse) Reset()         { *m = ReportTrafficAssertionsResponse{} }
func (m *ReportTrafficAssertionsResponse) String() string { return proto.CompactTextString(m) }
func (*ReportTrafficAssertionsResponse) ProtoMessage()    {}
func (*ReportTrafficAssertionsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b9d48fc1143c9cf, []int{1}
}

func (m *ReportTrafficAssertionsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReportTrafficAssertionsResponse.Unmarshal(m, b)
}
func (m *ReportTrafficAssertionsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReportTrafficAssertionsResponse.Marshal(b, m, deterministic)
}
func (m *ReportTrafficAssertionsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReportTrafficAssertionsResponse.Merge(m, src)
}
func (m *ReportTrafficAssertionsResponse) XXX_Size() int {
	return xxx_messageInfo_ReportTrafficAssertionsResponse.Size(m)
}
func (m *ReportTrafficAssertionsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReportTrafficAssertionsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReportTrafficAssertionsResponse proto.InternalMessageInfo

type WorkloadInstance struct {
	Uid                  string   `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Location             string   `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
	ClusterName          string   `protobuf:"bytes,3,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,omitempty"`
	OwnerUid             string   `protobuf:"bytes,4,opt,name=owner_uid,json=ownerUid,proto3" json:"owner_uid,omitempty"`
	WorkloadName         string   `protobuf:"bytes,5,opt,name=workload_name,json=workloadName,proto3" json:"workload_name,omitempty"`
	WorkloadNamespace    string   `protobuf:"bytes,6,opt,name=workload_namespace,json=workloadNamespace,proto3" json:"workload_namespace,omitempty"`
	CanonicalService     string   `protobuf:"bytes,7,opt,name=canonical_service,json=canonicalService,proto3" json:"canonical_service,omitempty"`
	CanonicalRevision    string   `protobuf:"bytes,8,opt,name=canonical_revision,json=canonicalRevision,proto3" json:"canonical_revision,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WorkloadInstance) Reset()         { *m = WorkloadInstance{} }
func (m *WorkloadInstance) String() string { return proto.CompactTextString(m) }
func (*WorkloadInstance) ProtoMessage()    {}
func (*WorkloadInstance) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b9d48fc1143c9cf, []int{2}
}

func (m *WorkloadInstance) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkloadInstance.Unmarshal(m, b)
}
func (m *WorkloadInstance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkloadInstance.Marshal(b, m, deterministic)
}
func (m *WorkloadInstance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkloadInstance.Merge(m, src)
}
func (m *WorkloadInstance) XXX_Size() int {
	return xxx_messageInfo_WorkloadInstance.Size(m)
}
func (m *WorkloadInstance) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkloadInstance.DiscardUnknown(m)
}

var xxx_messageInfo_WorkloadInstance proto.InternalMessageInfo

func (m *WorkloadInstance) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *WorkloadInstance) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

func (m *WorkloadInstance) GetClusterName() string {
	if m != nil {
		return m.ClusterName
	}
	return ""
}

func (m *WorkloadInstance) GetOwnerUid() string {
	if m != nil {
		return m.OwnerUid
	}
	return ""
}

func (m *WorkloadInstance) GetWorkloadName() string {
	if m != nil {
		return m.WorkloadName
	}
	return ""
}

func (m *WorkloadInstance) GetWorkloadNamespace() string {
	if m != nil {
		return m.WorkloadNamespace
	}
	return ""
}

func (m *WorkloadInstance) GetCanonicalService() string {
	if m != nil {
		return m.CanonicalService
	}
	return ""
}

func (m *WorkloadInstance) GetCanonicalRevision() string {
	if m != nil {
		return m.CanonicalRevision
	}
	return ""
}

type TrafficAssertion struct {
	Source                      *WorkloadInstance         `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	Destination                 *WorkloadInstance         `protobuf:"bytes,2,opt,name=destination,proto3" json:"destination,omitempty"`
	Protocol                    TrafficAssertion_Protocol `protobuf:"varint,3,opt,name=protocol,proto3,enum=google.cloud.meshtelemetry.v1alpha1.TrafficAssertion_Protocol" json:"protocol,omitempty"`
	DestinationServiceName      string                    `protobuf:"bytes,4,opt,name=destination_service_name,json=destinationServiceName,proto3" json:"destination_service_name,omitempty"`
	DestinationServiceNamespace string                    `protobuf:"bytes,5,opt,name=destination_service_namespace,json=destinationServiceNamespace,proto3" json:"destination_service_namespace,omitempty"`
	XXX_NoUnkeyedLiteral        struct{}                  `json:"-"`
	XXX_unrecognized            []byte                    `json:"-"`
	XXX_sizecache               int32                     `json:"-"`
}

func (m *TrafficAssertion) Reset()         { *m = TrafficAssertion{} }
func (m *TrafficAssertion) String() string { return proto.CompactTextString(m) }
func (*TrafficAssertion) ProtoMessage()    {}
func (*TrafficAssertion) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b9d48fc1143c9cf, []int{3}
}

func (m *TrafficAssertion) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TrafficAssertion.Unmarshal(m, b)
}
func (m *TrafficAssertion) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TrafficAssertion.Marshal(b, m, deterministic)
}
func (m *TrafficAssertion) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TrafficAssertion.Merge(m, src)
}
func (m *TrafficAssertion) XXX_Size() int {
	return xxx_messageInfo_TrafficAssertion.Size(m)
}
func (m *TrafficAssertion) XXX_DiscardUnknown() {
	xxx_messageInfo_TrafficAssertion.DiscardUnknown(m)
}

var xxx_messageInfo_TrafficAssertion proto.InternalMessageInfo

func (m *TrafficAssertion) GetSource() *WorkloadInstance {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *TrafficAssertion) GetDestination() *WorkloadInstance {
	if m != nil {
		return m.Destination
	}
	return nil
}

func (m *TrafficAssertion) GetProtocol() TrafficAssertion_Protocol {
	if m != nil {
		return m.Protocol
	}
	return TrafficAssertion_PROTOCOL_UNSPECIFIED
}

func (m *TrafficAssertion) GetDestinationServiceName() string {
	if m != nil {
		return m.DestinationServiceName
	}
	return ""
}

func (m *TrafficAssertion) GetDestinationServiceNamespace() string {
	if m != nil {
		return m.DestinationServiceNamespace
	}
	return ""
}

func init() {
	proto.RegisterEnum("google.cloud.meshtelemetry.v1alpha1.TrafficAssertion_Protocol", TrafficAssertion_Protocol_name, TrafficAssertion_Protocol_value)
	proto.RegisterType((*ReportTrafficAssertionsRequest)(nil), "google.cloud.meshtelemetry.v1alpha1.ReportTrafficAssertionsRequest")
	proto.RegisterType((*ReportTrafficAssertionsResponse)(nil), "google.cloud.meshtelemetry.v1alpha1.ReportTrafficAssertionsResponse")
	proto.RegisterType((*WorkloadInstance)(nil), "google.cloud.meshtelemetry.v1alpha1.WorkloadInstance")
	proto.RegisterType((*TrafficAssertion)(nil), "google.cloud.meshtelemetry.v1alpha1.TrafficAssertion")
}

func init() {
	proto.RegisterFile("extensions/stackdriver/edges/edges.proto", fileDescriptor_0b9d48fc1143c9cf)
}

var fileDescriptor_0b9d48fc1143c9cf = []byte{
	// 609 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x54, 0xc1, 0x4e, 0xdb, 0x40,
	0x10, 0xc5, 0x24, 0x0d, 0x61, 0x02, 0xc8, 0x59, 0x55, 0xd4, 0x0d, 0x6a, 0x81, 0x70, 0x89, 0x54,
	0xd5, 0x11, 0xa9, 0x2a, 0x71, 0xaa, 0xd4, 0x06, 0xda, 0x22, 0x15, 0x88, 0x8c, 0x11, 0x52, 0x2f,
	0xd1, 0xb2, 0x1e, 0xc0, 0xc2, 0xf6, 0xba, 0xbb, 0xeb, 0xd0, 0xfe, 0x40, 0x3f, 0xa5, 0xe7, 0xde,
	0xfb, 0x59, 0xfd, 0x81, 0xca, 0xbb, 0xb6, 0x09, 0x51, 0xa9, 0x10, 0xbd, 0x44, 0xd9, 0x79, 0x6f,
	0xde, 0xce, 0xbc, 0x19, 0x2f, 0xf4, 0xf0, 0xab, 0xc2, 0x44, 0x86, 0x3c, 0x91, 0x7d, 0xa9, 0x28,
	0xbb, 0x0a, 0x44, 0x38, 0x41, 0xd1, 0xc7, 0xe0, 0x02, 0xa5, 0xf9, 0x75, 0x53, 0xc1, 0x15, 0x27,
	0x5b, 0x17, 0x9c, 0x5f, 0x44, 0xe8, 0xb2, 0x88, 0x67, 0x81, 0x1b, 0xa3, 0xbc, 0x54, 0x18, 0x61,
	0x8c, 0x4a, 0x7c, 0x73, 0x27, 0xdb, 0x34, 0x4a, 0x2f, 0xe9, 0x76, 0x67, 0xdd, 0x90, 0xfa, 0x3a,
	0xe5, 0x2c, 0x3b, 0xef, 0xab, 0x30, 0x46, 0xa9, 0x68, 0x9c, 0x1a, 0x95, 0xee, 0x6f, 0x0b, 0x9e,
	0x7b, 0x98, 0x72, 0xa1, 0x7c, 0x41, 0xcf, 0xcf, 0x43, 0xf6, 0x56, 0x4a, 0x14, 0x2a, 0xbf, 0xdf,
	0xc3, 0x2f, 0x19, 0x4a, 0x45, 0x56, 0xa1, 0x91, 0x52, 0x81, 0x89, 0x72, 0xac, 0x0d, 0xab, 0xb7,
	0xe8, 0x15, 0x27, 0xf2, 0x14, 0x9a, 0xf9, 0xad, 0xe3, 0x2c, 0x0c, 0x9c, 0x79, 0x8d, 0x2c, 0xe4,
	0xe7, 0x93, 0x30, 0x20, 0x01, 0x10, 0x65, 0xe4, 0xc6, 0xb4, 0xd2, 0x73, 0x6a, 0x1b, 0xb5, 0x5e,
	0x6b, 0xf0, 0xda, 0xbd, 0x47, 0xe1, 0xee, 0x6c, 0x35, 0x5e, 0x5b, 0xcd, 0xd6, 0x47, 0x76, 0x60,
	0xb1, 0x6a, 0xc7, 0xa9, 0x6f, 0x58, 0xbd, 0xd6, 0xa0, 0x53, 0x8a, 0x97, 0x0d, 0xbb, 0x7e, 0xc9,
	0xf0, 0x6e, 0xc8, 0xdd, 0x4d, 0x58, 0xbf, 0xb3, 0x69, 0x99, 0xf2, 0x44, 0x62, 0xf7, 0xe7, 0x3c,
	0xd8, 0xa7, 0x5c, 0x5c, 0x45, 0x9c, 0x06, 0xfb, 0x89, 0x54, 0x34, 0x61, 0x48, 0x6c, 0xa8, 0xe5,
	0xdd, 0x1a, 0x1f, 0xf2, 0xbf, 0xa4, 0x03, 0xcd, 0x88, 0x33, 0x9a, 0xe7, 0x16, 0x26, 0x54, 0x67,
	0xb2, 0x09, 0x4b, 0x2c, 0xca, 0xa4, 0x42, 0x31, 0x4e, 0x68, 0x8c, 0x4e, 0x4d, 0xe3, 0xad, 0x22,
	0x76, 0x48, 0x63, 0x24, 0x6b, 0xb0, 0xc8, 0xaf, 0x13, 0x14, 0xda, 0xc4, 0xba, 0xc9, 0xd7, 0x81,
	0xdc, 0xc5, 0x2d, 0x58, 0xbe, 0x2e, 0x2a, 0x30, 0x02, 0x8f, 0x34, 0x61, 0xa9, 0x0c, 0x6a, 0x85,
	0x97, 0x40, 0x6e, 0x91, 0x64, 0x4a, 0x19, 0x3a, 0x0d, 0xcd, 0x6c, 0x4f, 0x33, 0x35, 0x40, 0x5e,
	0x40, 0x9b, 0xd1, 0x84, 0x27, 0x21, 0xa3, 0xd1, 0x58, 0xa2, 0x98, 0x84, 0x0c, 0x9d, 0x05, 0xcd,
	0xb6, 0x2b, 0xe0, 0xd8, 0xc4, 0x73, 0xed, 0x1b, 0xb2, 0xc0, 0x49, 0x98, 0xef, 0xa5, 0xd3, 0x34,
	0xda, 0x15, 0xe2, 0x15, 0x40, 0xf7, 0x7b, 0x1d, 0xec, 0x59, 0x43, 0xc9, 0x01, 0x34, 0x24, 0xcf,
	0x04, 0x43, 0xed, 0xda, 0x7d, 0xc7, 0x3f, 0xeb, 0xbc, 0x57, 0x88, 0x90, 0x53, 0x68, 0x05, 0x28,
	0x55, 0x98, 0xdc, 0x58, 0xfe, 0x60, 0xcd, 0x69, 0x25, 0xf2, 0x19, 0x9a, 0x7a, 0x67, 0x18, 0x8f,
	0xf4, 0xa0, 0x56, 0x06, 0x6f, 0x1e, 0xb4, 0xa8, 0xee, 0xa8, 0x50, 0xf1, 0x2a, 0x3d, 0xb2, 0x03,
	0xce, 0xd4, 0x55, 0xa5, 0xed, 0x66, 0xa6, 0x66, 0xe8, 0xab, 0x53, 0x78, 0xe1, 0xbe, 0x9e, 0xee,
	0x3b, 0x78, 0x76, 0x57, 0xa6, 0x19, 0xb4, 0x59, 0x89, 0xb5, 0xbf, 0xa7, 0x6b, 0x4a, 0x37, 0x85,
	0x66, 0x59, 0x13, 0x71, 0xe0, 0xf1, 0xc8, 0x3b, 0xf2, 0x8f, 0x86, 0x47, 0x9f, 0xc6, 0x27, 0x87,
	0xc7, 0xa3, 0xbd, 0xe1, 0xfe, 0xfb, 0xfd, 0xbd, 0x5d, 0x7b, 0x8e, 0xb4, 0x61, 0xb9, 0x42, 0x3e,
	0xfa, 0xfe, 0xc8, 0xb6, 0x08, 0x81, 0x95, 0x5b, 0xa1, 0x63, 0x7b, 0x9e, 0xd8, 0xb0, 0x54, 0xc5,
	0xfc, 0xe1, 0xc8, 0xae, 0xdd, 0x4a, 0xfc, 0xe0, 0x8d, 0x86, 0x76, 0x7d, 0xf0, 0xcb, 0x02, 0xfb,
	0x00, 0xe5, 0xe5, 0x5e, 0xfe, 0x5c, 0x95, 0xcb, 0xf4, 0xc3, 0x82, 0x27, 0x77, 0x7c, 0x74, 0x64,
	0x78, 0x2f, 0xab, 0xff, 0xfd, 0x4e, 0x75, 0x76, 0xff, 0x4f, 0xa4, 0xf8, 0xee, 0xe7, 0xce, 0x1a,
	0x7a, 0x6e, 0xaf, 0xfe, 0x04, 0x00, 0x00, 0xff, 0xff, 0xb3, 0x33, 0x9d, 0x14, 0x8b, 0x05, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MeshEdgesServiceClient is the client API for MeshEdgesService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MeshEdgesServiceClient interface {
	ReportTrafficAssertions(ctx context.Context, in *ReportTrafficAssertionsRequest, opts ...grpc.CallOption) (*ReportTrafficAssertionsResponse, error)
}

type meshEdgesServiceClient struct {
	cc *grpc.ClientConn
}

func NewMeshEdgesServiceClient(cc *grpc.ClientConn) MeshEdgesServiceClient {
	return &meshEdgesServiceClient{cc}
}

func (c *meshEdgesServiceClient) ReportTrafficAssertions(ctx context.Context, in *ReportTrafficAssertionsRequest, opts ...grpc.CallOption) (*ReportTrafficAssertionsResponse, error) {
	out := new(ReportTrafficAssertionsResponse)
	err := c.cc.Invoke(ctx, "/google.cloud.meshtelemetry.v1alpha1.MeshEdgesService/ReportTrafficAssertions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MeshEdgesServiceServer is the server API for MeshEdgesService service.
type MeshEdgesServiceServer interface {
	ReportTrafficAssertions(context.Context, *ReportTrafficAssertionsRequest) (*ReportTrafficAssertionsResponse, error)
}

// UnimplementedMeshEdgesServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMeshEdgesServiceServer struct {
}

func (*UnimplementedMeshEdgesServiceServer) ReportTrafficAssertions(ctx context.Context, req *ReportTrafficAssertionsRequest) (*ReportTrafficAssertionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReportTrafficAssertions not implemented")
}

func RegisterMeshEdgesServiceServer(s *grpc.Server, srv MeshEdgesServiceServer) {
	s.RegisterService(&_MeshEdgesService_serviceDesc, srv)
}

func _MeshEdgesService_ReportTrafficAssertions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReportTrafficAssertionsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MeshEdgesServiceServer).ReportTrafficAssertions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/google.cloud.meshtelemetry.v1alpha1.MeshEdgesService/ReportTrafficAssertions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MeshEdgesServiceServer).ReportTrafficAssertions(ctx, req.(*ReportTrafficAssertionsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MeshEdgesService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "google.cloud.meshtelemetry.v1alpha1.MeshEdgesService",
	HandlerType: (*MeshEdgesServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ReportTrafficAssertions",
			Handler:    _MeshEdgesService_ReportTrafficAssertions_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "extensions/stackdriver/edges/edges.proto",
}
